*O Que é Git?

É uma espécie de "rede social para programadores". 
O site tem uma fama especial nesse nicho, sendo também um serviço de publicação e compartilhamento de códigos de programação.
Lançada em 2008, a plataforma é usada mundialmente e é, desde 2018, de propriedade da MICROSOFT


O Git permite que os desenvolvedores vejam toda a linha do tempo das suas alterações, decisões e progressão de qualquer projeto em um só lugar. 
Desde o momento em que acessam a história de um projeto, o desenvolvedor tem todo o contexto de que precisa para entender e começar a contribuir.

Os desenvolvedores trabalham em todos os fusos horários. Com um DVCS como o Git, a colaboração pode acontecer a qualquer momento enquanto mantém a integridade do código-fonte. 
Ao usar branches, os desenvolvedores podem propor alterações no código de produção.

As empresas que usam o Git podem derrubar as barreiras de comunicação entre equipes e mantê-las focadas em fazer o melhor trabalho. 
Além disso, o Git possibilita alinhar especialistas em todos os negócios para colaborar em grandes projetos.

*As vantagens do GIT

As principais vantagens são:

Gratuito;
Rápido;
Desenvolvimento distribuído;
Permite desenvolver sem estar conectado na rede;
Excelente documentação online;
Criar branches é fácil e rápido.

*Como o GITHUB funciona

GitHub hospeda repositórios do Git e fornece aos desenvolvedores ferramentas para enviar um código melhor por meio das funcionalidades de linha de comando, problemas(discussões encadeadas), pull requests, revisão de código ou o uso de uma coleção de aplicativos grátis e para compra em GitHub Marketplace. Com camadas de colaboração como o fluxo de GitHub, uma comunidade de 100 milhões de desenvolvedores, e um ecossistema com centenas de integrações, GitHub muda a forma como o software é construído.

GitHub cria colaboração diretamente no processo de desenvolvimento. O trabalho é organizado em repositórios onde os desenvolvedores podem definir os requisitos ou direção e definir expectativas para os integrantes da equipe. Em seguida, ao usar o fluxo GitHub, os desenvolvedores simplesmente criam um branch para trabalhar nas atualizações, enviar alterações para salvá-las, abrir um pull request para propor e discutir alterações, e fazer merge de pull requests quando todos estiverem na mesma página. Para obter mais informações, confira "Fluxo do GitHub".

Para planos e custos de GitHub, confira GitHub Pricing. Para obter informações sobre como GitHub Enterprise se compara a outras opções, confira Comparando o GitHub com outras soluções de DevOps.

*PRINIPAIS COMANDOS DO GIT

GIT INIT ->

GIT ADD -> 

GIT CLONE -> 

GIT COMMIT ->
G
GIT STATUS ->

GIT BRANCH ->

GIT MERGE ->